{"version":3,"sources":["actions/cities.ts","reducers/cityDetails.ts","reducers/index.ts","reducers/cities.ts","utils/history.ts","components/FlexWrapper.tsx","components/SharedComponents.tsx","utils/iconsHelper.tsx","pages/CityDetails/HourlyDetails.tsx","pages/CityDetails/MainDetails.tsx","pages/CityDetails/DailyDetails.tsx","utils/cityData.ts","pages/CityDetails/index.tsx","pages/LandingPage/CityCard.tsx","pages/LandingPage/index.tsx","App.tsx","index.tsx"],"names":["FetchCitiesTypes","API_KEY","FetchCityTypes","initialState","current","temp","weather","icon","hourly","daily","isLoading","combineReducers","cities","state","type","payload","SUCCESS","cityDetails","START","createBrowserHistory","FlexWrapper","styled","div","flexDirection","justifyContent","flexWrap","alignItems","margin","CenteredHeader","h1","StyledLink","a","PillLabel","span","FontWrapper","fontSize","MarginWrapper","getIcon","FaSun","FaMoon","FaCloudSun","FaCloudMoon","FaCloud","FaCloudShowersHeavy","FaCloudSunRain","FaCloudMoonRain","AiFillThunderbolt","FaSnowflake","RiMistFill","getBackground","firstColor","secondColor","getColor","indexOf","ItemWrapper","StyledIcon","FaArrowRight","HourlyDetails","useState","startIndex","setStartIndex","endIndex","setEndIndex","slice","displayArray","setDisplayArray","useEffect","as","FaArrowLeft","onClick","map","dateTime","dt","IconComponent","moment","unix","format","size","Math","round","length","DescriptionWrapper","Wrapper","MainDetails","DailyDetails","data","setData","newData","datetime","temperature","day","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","Tooltip","CartesianGrid","stroke","Line","yAxisId","cityCoords","paris","lat","lon","london","madrid","amsterdam","skopje","cityNames","CityDetails","name","useParams","cityName","split","join","dispatch","useDispatch","useSelector","showLoader","setShowLoader","fetch","then","res","json","response","fetchCity","href","toUpperCase","CardWrapper","background","color","LabelsWrapper","CityCard","city","main","humidity","speed","wind","description","formattedName","toLowerCase","style","position","top","left","LandingPage","Promise","all","App","history","exact","path","component","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faab625c.chunk.js","sourcesContent":["\nconst API_KEY = 'c0b58cef40398aa337d430489640ad58';\n\nexport enum FetchCitiesTypes {\n\tSTART = 'FETCH_CITIES_START',\n\tSUCCESS = 'FETCH_CITIES_SUCCESS',\n}\nexport const fetchCities = (cityNames: Array<string>) => async (dispatch: any) => {\n\tdispatch({ type: FetchCitiesTypes.START })\n\tPromise.all(cityNames.map(city => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`).then(res => res.json()))).then(response => {\n\t\tdispatch({ type: FetchCitiesTypes.SUCCESS, payload: response})\n\t});\n}\n\nexport enum FetchCityTypes {\n\tSTART = 'FETCH_CITY_START',\n\tSUCCESS = 'FETCH_CITY_SUCCESS',\n}\nexport const fetchCity = (lat: number, lon: number) => async (dispatch: any) => {\n\tdispatch({ type: FetchCityTypes.START })\n\tfetch(`https://api.openweathermap.org/data/2.5/onecall?lon=${lon}&lat=${lat}&units=metric&appid=${API_KEY}`).then(res => res.json()).then(response => {\n\t\tdispatch({ type: FetchCityTypes.SUCCESS, payload: response})\n\t})\n}","import { FetchCityTypes } from \"../actions/cities\";\n\nconst initialState = {\n\tcurrent: {\n\t\ttemp: 0,\n\t\tweather: [\n\t\t\t{\n\t\t\t\ticon: '01d',\n\t\t\t}\n\t\t]\n\t},\n\thourly: [],\n\tdaily: [],\n\tisLoading: false,\n};\n\nexport const cityDetails = (state = initialState, { type, payload }: any) => {\n\tswitch (type) {\n\t\tcase FetchCityTypes.START: {\n\t\t\treturn { ...state, isLoading: true };\n\t\t}\n\t\tcase FetchCityTypes.SUCCESS: {\n\t\t\treturn { ...payload, isLoading: false };\n\t\t}\n\t}\n\treturn state;\n}","import { combineReducers } from \"redux\";\nimport { cities } from './cities';\nimport { cityDetails } from './cityDetails';\n\nexport default combineReducers({ cities, cityDetails });","import { FetchCitiesTypes } from \"../actions/cities\";\n\nexport const cities = (state = [], { type, payload }: any) => {\n\tswitch (type) {\n\t\tcase FetchCitiesTypes.SUCCESS: {\n\t\t\treturn payload;\n\t\t}\n\t}\n\treturn state;\n}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import styled from 'styled-components';\n\ninterface Props {\n  flexDirection?: string;\n  justifyContent?: string;\n  flexWrap?: string;\n  alignItems?: string;\n  margin?: string;\n}\n\nconst FlexWrapper = styled.div<Props>`\n  display: flex;\n  ${({ flexDirection }) => flexDirection && `flex-direction: ${flexDirection};`}\n  ${({ justifyContent }) =>\n    justifyContent && `justify-content: ${justifyContent};`}\n\t${({ flexWrap }) => flexWrap && `flex-wrap: ${flexWrap};`}\n\t${({ alignItems }) => alignItems && `align-items: ${alignItems};`}\n\t${({ margin }) => margin && `margin: ${margin};`}\n`;\nexport default FlexWrapper;\n","import styled from 'styled-components';\n\nexport const CenteredHeader = styled.h1`\n  text-align: center;\n`;\n\nexport const StyledLink = styled.a`\n  text-decoration: none;\n  display: inline-block;\n  color: black;\n`;\n\nexport const PillLabel = styled.span`\n  background-color: white;\n  display: inline-block;\n  margin: 0.5rem;\n  width: fit-content;\n  padding: 0.5rem;\n  border-radius: 10px;\n`;\n\nexport const FontWrapper = styled.div<{ fontSize: string }>`\n  font-size: ${({ fontSize }) => fontSize};\n`;\n\nexport const MarginWrapper = styled.div<{ margin: string }>`\n  margin: ${({ margin }) => margin};\n`;\n","import {\n  FaMoon,\n  FaSun,\n  FaCloudSun,\n  FaCloudMoon,\n  FaCloud,\n  FaCloudShowersHeavy,\n  FaCloudSunRain,\n  FaCloudMoonRain,\n  FaSnowflake,\n} from 'react-icons/fa';\nimport { RiMistFill } from 'react-icons/ri';\nimport { AiFillThunderbolt } from 'react-icons/ai';\n\nexport const getIcon: Record<string, any> = {\n  '01d': FaSun,\n  '01n': FaMoon,\n  '02d': FaCloudSun,\n  '02n': FaCloudMoon,\n  '03d': FaCloud,\n  '03n': FaCloud,\n  '04d': FaCloud,\n  '04n': FaCloud,\n  '09d': FaCloudShowersHeavy,\n  '09n': FaCloudShowersHeavy,\n  '10d': FaCloudSunRain,\n  '10n': FaCloudMoonRain,\n  '11d': AiFillThunderbolt,\n  '11n': AiFillThunderbolt,\n  '13d': FaSnowflake,\n  '13n': FaSnowflake,\n  '50d': RiMistFill,\n  '50n': RiMistFill,\n};\n\nexport const getBackground: Record<string, any> = {\n  '01d': { firstColor: '#ffe500bd', secondColor: '#fd746c8c' },\n  '01n': { firstColor: '#000000', secondColor: '#0003135e' },\n  '02d': { firstColor: '#ffe500bd', secondColor: '#153bff33' },\n  '02n': { firstColor: '#000000', secondColor: '#0003135e' },\n  '03d': { firstColor: '#6cd5e2', secondColor: '#010b0c2b' },\n  '03n': { firstColor: '#000000', secondColor: '#0003134a' },\n  '04d': { firstColor: '#00000075', secondColor: '#00031338' },\n  '04n': { firstColor: '#000000', secondColor: '#0003134a' },\n  '09d': { firstColor: '#00000075', secondColor: '#00031338' },\n  '09n': { firstColor: '#000000', secondColor: '#0003135e' },\n  '10d': { firstColor: '#ffe500bd', secondColor: '#153bff33' },\n  '10n': { firstColor: '#000000', secondColor: '#0003135e' },\n  '11d': { firstColor: '#00000075', secondColor: '#00031338' },\n  '11n': { firstColor: '#000000', secondColor: '#0003135e' },\n  '13d': { firstColor: '#3474b58c', secondColor: '#153bff26' },\n  '13n': { firstColor: '#000000e6', secondColor: '#5e75ef7a' },\n  '50d': { firstColor: '#f3e7e78c', secondColor: '#7896a5' },\n  '50n': { firstColor: '#01141d', secondColor: '#9e9e9e85' },\n};\n\nexport const getColor = (icon: string) =>\n  icon.indexOf('d') === -1 ? 'white' : 'black';\n","import React, { useEffect, useState } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\n// components\nimport FlexWrapper from '../../components/FlexWrapper';\nimport { MarginWrapper } from '../../components/SharedComponents';\n\n// utils\nimport { getIcon } from '../../utils/iconsHelper';\n\n// types\nimport { HourlyDetailsType } from '../../types/CityDetails';\n\nconst ItemWrapper = styled(FlexWrapper)`\n  border: 1px solid black;\n  margin: 1rem;\n  padding: 0.5rem;\n  border-radius: 15px;\n  > * {\n    margin: 0.15rem;\n  }\n`;\n\nconst StyledIcon = styled(FaArrowRight)`\n  cursor: pointer;\n`;\n\ninterface Props {\n  hourly: Array<HourlyDetailsType>;\n}\n\nconst HourlyDetails = ({ hourly }: Props) => {\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(6);\n  const [displayArray, setDisplayArray] = useState(\n    hourly.slice(startIndex, endIndex)\n  );\n\n  useEffect(() => {\n    setDisplayArray(hourly.slice(startIndex, endIndex));\n  }, [startIndex, endIndex, hourly]);\n\n  return (\n    <>\n      <MarginWrapper margin=\"1rem 0 0 0\">In the next 24 hours</MarginWrapper>\n      <FlexWrapper flexWrap=\"wrap\" justifyContent=\"center\" alignItems=\"center\">\n        {startIndex > 0 && (\n          <StyledIcon\n            as={FaArrowLeft}\n            onClick={() => {\n              setStartIndex(startIndex - 1);\n              setEndIndex(endIndex - 1);\n            }}\n          />\n        )}\n        {displayArray.map(\n          ({ dt: dateTime, temp, weather }: HourlyDetailsType) => {\n            const { icon } = weather[0];\n            const IconComponent = getIcon[icon];\n            return (\n              <ItemWrapper\n                key={dateTime}\n                flexDirection=\"column\"\n                alignItems=\"center\"\n              >\n                <span>{moment.unix(dateTime).format('HH:mm')}</span>\n                <IconComponent size={30} />\n                <span>{Math.round(temp)}&deg;</span>\n              </ItemWrapper>\n            );\n          }\n        )}\n        {endIndex < hourly.length && (\n          <StyledIcon\n            onClick={() => {\n              setStartIndex(startIndex + 1);\n              setEndIndex(endIndex + 1);\n            }}\n          />\n        )}\n      </FlexWrapper>\n    </>\n  );\n};\n\nexport default HourlyDetails;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// components\nimport FlexWrapper from '../../components/FlexWrapper';\n\n// utils\nimport { getIcon } from '../../utils/iconsHelper';\n\nconst DescriptionWrapper = styled.div`\n  font-size: 4rem;\n  margin-left: 5rem;\n`;\n\nconst Wrapper = styled(FlexWrapper)`\n  border: 1px solid black;\n  padding: 1rem;\n  border-radius: 15px;\n  margin: 1rem 0;\n  max-width: 300px;\n  align-items: center;\n`;\n\ninterface Props {\n  temp: number;\n  icon: string;\n}\n\nconst MainDetails = ({ temp, icon }: Props) => {\n  const IconComponent = getIcon[icon];\n  return (\n    <>\n      <div>Current temperature</div>\n      <Wrapper flexDirection=\"row\" justifyContent=\"flex-start\">\n        <IconComponent size={100} />\n        <DescriptionWrapper>{Math.round(temp)} &deg;</DescriptionWrapper>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default MainDetails;\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport {\n  LineChart,\n  XAxis,\n  Line,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\n\n// components\nimport { MarginWrapper } from '../../components/SharedComponents';\n\n// types\nimport { DailyDetailsType } from '../../types/CityDetails';\n\ninterface Props {\n  daily: Array<DailyDetailsType>;\n}\n\ninterface ChartData {\n  dateTime: string;\n  temperature: number;\n}\n\nconst DailyDetails = ({ daily }: Props) => {\n  const [data, setData] = useState<Array<ChartData>>([]);\n\n  useEffect(() => {\n    const newData = daily.map(\n      ({ dt: datetime, temp: { day: temperature } }) => {\n        return {\n          dateTime: moment.unix(datetime).format('DD/MM'),\n          temperature: Math.round(temperature),\n        };\n      }\n    );\n    setData(newData);\n  }, [daily]);\n\n  return (\n    <>\n      <MarginWrapper margin=\"1rem 0 0.5rem 0\">In the next 7 days</MarginWrapper>\n      <ResponsiveContainer width=\"80%\" height={300}>\n        <LineChart data={data}>\n          <XAxis dataKey=\"dateTime\" />\n          <Tooltip />\n          <CartesianGrid stroke=\"#f5f5f5\" />\n          <Line type=\"monotone\" dataKey=\"temperature\" yAxisId={1} />\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default DailyDetails;\n","export const cityCoords: Record<string, { lat: number, lon: number}> = {\n\tparis: { lat: 48.8534, lon: 2.3488 },\n\tlondon: { lat: 51.5085, lon: -0.1257 },\n\tmadrid: { lat: 40.4165, lon: -3.7026 },\n\tamsterdam: { lat: 52.374 , lon: 4.8897 },\n\tskopje: { lat: 42 , lon: 21.4333 },\n}\n\nexport const cityNames = ['paris', 'london', 'madrid', 'amsterdam', 'skopje'];","import React, { useEffect, useState } from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { RiLoader2Fill } from 'react-icons/ri';\n\n// actions\nimport { fetchCity } from '../../actions/cities';\n\n// components\nimport FlexWrapper from '../../components/FlexWrapper';\nimport { CenteredHeader, StyledLink } from '../../components/SharedComponents';\nimport HourlyDetails from './HourlyDetails';\nimport MainDetails from './MainDetails';\nimport DailyDetails from './DailyDetails';\n\n// utils\nimport { cityCoords } from '../../utils/cityData';\n\n// types\nimport { RootState } from '../../types/RootState';\n\nconst Wrapper = styled.div`\n  width: 70vw;\n  min-height: 50vh;\n  border: 1px solid gray;\n  margin: 0 auto 3rem auto;\n  border-radius: 20px;\n  box-shadow: 0 0 8px 6px lightgray;\n  background: linear-gradient(150deg, #fd746c8c 0%, #3f51b55e 70%);\n  padding: 1rem;\n`;\n\nconst StyledIcon = styled(FaArrowLeft)`\n  margin: 1rem;\n`;\n\nconst CityDetails = () => {\n  const { cityName } = useParams<any>();\n  const name = cityName.split('-').join(' ');\n  const dispatch = useDispatch();\n\n  const cityDetails = useSelector((state: RootState) => state.cityDetails);\n  const [showLoader, setShowLoader] = useState(true);\n\n  const {\n    current: { temp, weather },\n    hourly,\n    daily,\n    isLoading,\n  } = cityDetails;\n\n  const { icon } = weather[0];\n\n  useEffect(() => {\n    if (cityCoords[name]) {\n      const { lat, lon } = cityCoords[name];\n      dispatch(fetchCity(lat, lon));\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowLoader(isLoading);\n  }, [isLoading]);\n\n  if (!cityCoords[name]) return <div>City not found.</div>;\n  return (\n    <>\n      <StyledLink href=\"/weather-app\">\n        <StyledIcon size={30} />\n      </StyledLink>\n      <Wrapper>\n        <CenteredHeader>{name.toUpperCase()}</CenteredHeader>\n        {!showLoader ? (\n          <FlexWrapper flexDirection=\"column\" alignItems=\"center\">\n            <MainDetails temp={temp} icon={icon} />\n            <HourlyDetails hourly={hourly.slice(0, 24)} />\n            <DailyDetails daily={daily} />\n          </FlexWrapper>\n        ) : (\n          <CenteredHeader>\n            <RiLoader2Fill />\n          </CenteredHeader>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default CityDetails;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaWind } from 'react-icons/fa';\nimport { GiWaterDrop } from 'react-icons/gi';\n\n// components\nimport FlexWrapper from '../../components/FlexWrapper';\nimport {\n  FontWrapper,\n  PillLabel,\n  StyledLink,\n} from '../../components/SharedComponents';\n\n// utils\nimport { getBackground, getColor, getIcon } from '../../utils/iconsHelper';\n\n// types\nimport { CityType } from '../../types/City';\n\nconst CardWrapper = styled.div<{ color: string; background: any }>`\n  position: relative;\n  border: 1px solid gray;\n  border-radius: 20px;\n  padding: 3rem 1rem;\n  margin: 2rem;\n  min-width: 300px;\n  box-shadow: 0 0 8px 6px lightgray;\n  background: ${({ background: { firstColor, secondColor } }) =>\n    `linear-gradient(150deg, ${firstColor} 0%, ${secondColor} 70%)`};\n  color: ${({ color }) => color};\n  cursor: pointer;\n  transition: all 0.5s;\n\n  :hover {\n    transform: scale(1.1);\n    > div {\n      filter: blur(10px);\n    }\n  }\n\n  :not(:hover) {\n    > span {\n      display: none;\n    }\n  }\n`;\n\nconst LabelsWrapper = styled.div<{ color: string }>`\n  text-align: center;\n  margin-top: 1rem;\n  color: black;\n`;\n\ninterface Props {\n  city: CityType;\n}\n\nconst CityCard = ({ city }: Props) => {\n  const {\n    weather,\n    main: { temp, humidity },\n    name,\n    wind: { speed },\n  } = city;\n  const { main: description, icon } = weather[0];\n\n  const IconComponent = getIcon[icon];\n\n  const formattedName = name.toLowerCase().split(' ').join('-');\n\n  return (\n    <CardWrapper color={getColor(icon)} background={getBackground[icon]}>\n      <div>\n        <FlexWrapper justifyContent=\"space-around\">\n          <IconComponent size={100} />\n          <FlexWrapper flexDirection=\"column\">\n            <FontWrapper fontSize=\"1.5rem\">{name}</FontWrapper>\n            <FontWrapper fontSize=\"4rem\">{Math.round(temp)} &deg;</FontWrapper>\n          </FlexWrapper>\n        </FlexWrapper>\n        <LabelsWrapper color={getColor(icon)}>\n          <PillLabel>{description}</PillLabel>\n          <PillLabel>\n            <GiWaterDrop />\n            {humidity} %\n          </PillLabel>\n          <PillLabel>\n            <FaWind /> {speed} m/s\n          </PillLabel>\n        </LabelsWrapper>\n      </div>\n      <PillLabel\n        style={{\n          position: 'absolute',\n          top: '40%',\n          left: '33%',\n        }}\n      >\n        <StyledLink href={`/weather-app/city-details/${formattedName}`}>\n          View details\n        </StyledLink>\n      </PillLabel>\n    </CardWrapper>\n  );\n};\n\nexport default CityCard;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiLoader2Fill } from 'react-icons/ri';\n\n// components\nimport CityCard from './CityCard';\nimport FlexWrapper from '../../components/FlexWrapper';\nimport { CenteredHeader } from '../../components/SharedComponents';\n\n// actions\nimport { fetchCities } from '../../actions/cities';\n\n// uti;s\nimport { cityNames } from '../../utils/cityData';\n\n// types\nimport { RootState } from '../../types/RootState';\n\nconst LandingPage = () => {\n  const dispatch = useDispatch();\n  const cities = useSelector((state: RootState) => state.cities);\n\n  useEffect(() => {\n    dispatch(fetchCities(cityNames));\n  }, []);\n\n  return (\n    <>\n      <CenteredHeader>Weather forecast</CenteredHeader>\n      {cities.length !== 0 ? (\n        <FlexWrapper\n          flexWrap=\"wrap\"\n          justifyContent=\"space-evenly\"\n          margin=\"3rem 0 4rem 0\"\n        >\n          {cities.map((city) => {\n            return <CityCard city={city} key={city.name} />;\n          })}\n        </FlexWrapper>\n      ) : (\n        <CenteredHeader>\n          <RiLoader2Fill />\n        </CenteredHeader>\n      )}\n    </>\n  );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\n\n// utils\nimport history from './utils/history';\n\n// pages\nimport CityDetails from './pages/CityDetails';\nimport LandingPage from './pages/LandingPage';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/weather-app\" component={LandingPage} />\n        <Route\n          path=\"/weather-app/city-details/:cityName\"\n          component={CityDetails}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport reducers from './reducers';\n\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}